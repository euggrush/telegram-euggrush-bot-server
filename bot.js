import dotenv from "dotenv";
import TelegramBot from "node-telegram-bot-api";
import axios from "axios";
import db from "./db.js";

dotenv.config();

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–ª—é—á–∏ API
if (!process.env.TELEGRAM_BOT_TOKEN || !process.env.GPT_API_KEY) {
    console.error("–û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –∏–ª–∏ GPT_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env");
    process.exit(1);
}

const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, {
    polling: true
});
const OPENAI_API_KEY = process.env.GPT_API_KEY;

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    const name = msg.chat.first_name || "–ì–æ—Å—Ç—å";

    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
        const user = db.prepare("SELECT * FROM users WHERE telegram_id = ?").get(chatId);

        if (!user) {
            db.prepare("INSERT INTO users (telegram_id, name) VALUES (?, ?)").run(chatId, name);
            bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç, ${name}! –¢—ã –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É.`);
        } else {
            bot.sendMessage(chatId, `–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${name}!`);
        }
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:", error);
        bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }
});

// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞ (–æ–±—â–µ–Ω–∏–µ —Å OpenAI)
bot.on("message", async (msg) => {
    const chatId = msg.chat.id;
    const userMessage = msg.text;

    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã (–æ–Ω–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ)
    if (userMessage.startsWith("/")) return;

    try {
        const response = await axios.post(
            "https://api.openai.com/v1/chat/completions", {
                model: "gpt-4",
                messages: [{
                    role: "user",
                    content: userMessage
                }],
            }, {
                headers: {
                    Authorization: `Bearer ${OPENAI_API_KEY}`
                },
            }
        );

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—Ç–≤–µ—Ç –æ—Ç AI
        const replyText = response.data?.choices?.[0]?.message?.content || "ü§ñ AI –Ω–µ —Å–º–æ–≥ –æ—Ç–≤–µ—Ç–∏—Ç—å.";
        bot.sendMessage(chatId, replyText);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ AI:", error);
        bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }
});

console.log("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...");